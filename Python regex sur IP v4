#####################################
#regex sur adresse IP
#Valider avec une expression régulière  une adresse IP v4 qui ne soit pas locale, ni réservée
#Une adresse locale comme par 127.
#Les adresses réservées commence par 10. ou 192.168 ou encore 255.
#Les adresses sont quatre blocs de chiffres allant de 0 à 255 sauf pour le premier bloc qui est de 1 à 254
#indice \d pour valider un bloc numérique

import re
import sys

print("\n=====================")
ip = input("\nEntrer une Ip address : ")
print("\n=====================")

#test sur longeur de la chaine de caractere
if re.compile(r'^\d{1,3}(\.\d{1,3}){3}').match(ip):

    # regex commence par 127 -> adresse locale
    if re.search(r'^\d{1,3}\.',ip).group(0)=="127.":
        print("Adresse IP locale")
        sys.exit(0)
    # regex commence par 10. ou 192.168 ou encore 255
    if re.search(r'^\d{1,3}\.',ip).group(0)=="10." or re.search(r'^\d{1,3}\.',ip).group(0)=="255." or re.search(r'^\d{1,3}\.\d{1,3}\.',ip).group(0)=="192.168.":
        print("Adresse IP réservée")
        sys.exit(0)
    #une adresse IP v4 :


    #  premier bloc qui est de 1 à 254   - | - ou reconnaît l'un ou l'autre
    # de 1 à 9 [1-9]
    # de 10 à 99 [1–9][0–9]
    # de 100 à 199 1 [0–9][0–9]
    # de 200 à 249 2 [0-4] [0-9]
    # de 250 à 254 25[0-4]
    #print(re.compile(r'^\d[1-9]\.').match(ip))
    #print(re.search(r'^[1-9]\.', ip).group(0))

    #  de 4 blocs avec idem  X 3 ({3})
    #  sur chiffres allant de 0 à 255
    # de 0 à 9
    # de 0 à 99 [0–9][0–9]
    # de 100 à 199 1 [0–9][0–9]
    # de 200 à 249 2 [0-4] [0-9]
    # de 250 à 254 25[0-5]


    regex_ip = re.compile(r'^([1-9]|[1–9][0–9]| 1 [0–9][0–9]| 2 [0-4] [0-9]|25[0-4])(\.([0-9]|[0–9][0–9]| 1 [0–9][0–9]| 2 [0-4] [0-9]|25[0-5])){3}').match(ip)

    print(regex_ip)
    if regex_ip:
        print("=====================")
        print("IP valide")
        print("=====================")
    else:
        print ("IP invalde")
else:
    print("Saisie de l'adresse IP non valide")
